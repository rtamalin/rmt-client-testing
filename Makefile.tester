# tester container image
TESTER_IMAGE ?= rmt-client-tester

# number of clients to generate hwinfo for
NUM_CLIENTS ?= 1000

# client hwinfo data store
CLIENT_DATA_STORE ?= $(REPO_BASE_DIR)/_ClientDataStore-$(NUM_CLIENTS)

# env settings file
ENV_FILE ?= $(REPO_BASE_DIR)/.env

# helper script dir
HELPER_DIR ?= $(REPO_BASE_DIR)/bin

# client registration product
PRODUCT ?= SLES
VERSION ?= 15.7
ARCH ?= x86_64
PRODUCT_SPEC = $(PRODUCT)/$(VERSION)/$(ARCH)

# RMT specification
RMT_HOST ?= localhost

# tester image run options
TESTER_RUN_OPTIONS = \
	  --rm \
	  --network=host \
		--cap-add=sys_rawio \
		--device /dev/mem:/dev/mem \
		-v $(REPO_BASE_DIR):/app/tester \
		-v $(CLIENT_DATA_STORE):/app/ClientDataStore

# RMT setup actions
.PHONY: rmt-setup

rmt-setup:
	bin/rmt-cli sync
	bin/rmt-cli product enable $(PRODUCT_SPEC)
	bin/rmt-cli mirror all

# testing actions
.PHONY: remove-clients client-deregister client-register client-update client-tester env-exists generate-hwinfo

env-exists:
	@if [ ! -e $(ENV_FILE) ]; then \
	  echo "Please create a .env file in the repo; copy it from your SUSE/rmt repo"; \
	  exit 1; \
	fi

generate-hwinfo: build
	if [ ! -d $(CLIENT_DATA_STORE) ]; then \
	  out/rmt-hwinfo-generator \
		--datastore $(CLIENT_DATA_STORE) \
		--clients $(NUM_CLIENTS); \
	fi
	@if [ ! -d $(CLIENT_DATA_STORE) ]; then \
	  echo Failed create client data store for $(NUM_CLIENTS); \
	  exit 1; \
	fi

client-register client-update client-deregister: env-exists generate-hwinfo docker-build
	. $(ENV_FILE); \
	$(CNTR_MGR) run \
	  $(TESTER_RUN_OPTIONS) \
		--entrypoint /app/bin/rmt-hwinfo-clientctl \
	  $(TESTER_IMAGE) \
				--action $(subst client-,,$@) \
				--clients $(NUM_CLIENTS) \
				--product $(PRODUCT) \
				--version $(VERSION) \
				--arch $(ARCH) \
				--datastore /app/ClientDataStore \
				--scc-host http://$(RMT_HOST)$${EXTERNAL_PORT:+:$${EXTERNAL_PORT}}/ \
				--regcode $${REG_CODE}
	$(HELPER_DIR)/rmt-size-of-system-information
	$(HELPER_DIR)/rmt-systems-table-size
	  
client-tester:
	$(CNTR_MGR) run \
	  -it \
	  $(TESTER_RUN_OPTIONS) \
	  $(TESTER_IMAGE)

# TODO: implement deregister in rmt-hwinfo-clientctl
remove-clients:
	for c in $$($(HELPER_DIR)/rmt-db-query --skip-column-names -s -e "SELECT login FROM systems;" | tr -d '\r'); \
	do \
	  echo "[Removing $${c}]"; \
		$(HELPER_DIR)/rmt-cli systems remove $${c} || exit 1 ; \
	done
	$(HELPER_DIR)/rmt-size-of-system-information
	$(HELPER_DIR)/rmt-systems-table-size

.PHONY: size-of-system-information systems-table-size system_data_profiles-table-size
size-of-system-information systems-table-size system_data_profiles-table-size:
	$(HELPER_DIR)/rmt-$(@)

num-rmt-clients:
	$(HELPER_DIR)/rmt-db-query 'SELECT COUNT(login) AS NumClients FROM systems;'
